{"version":3,"sources":["components/NavBar.js","fire.js","components/BarGraph.js","components/FileSystem.js","components/QRcode.js","components/QRModal.js","components/Loading.js","components/ModelsList.js","components/DeployForm.js","components/ConfigForm.js","components/ClusterForm.js","components/Inference.js","components/HelpLink.js","components/Tabs.js","App.js","index.js"],"names":["NavBar","props","useState","collapsed","setCollapsed","Navbar","color","dark","NavbarBrand","href","className","NavbarToggler","onClick","Collapse","isOpen","navbar","Nav","NavItem","NavLink","db","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","BarGraph","domainPadding","theme","VictoryTheme","material","alignment","labelComponent","textAnchor","angle","data","this","x","y","Component","styles","marginTop","MyFileSystem","fetchFromDB","collection","get","then","querySnapshot","docs","map","doc","i","length","names","index","setState","state","Container","Row","Col","xs","style","Table","striped","folder","key","scope","label","Button","QRcode","value","name","ModalExample","modal","setModal","toggle","Modal","ModalHeader","ModalBody","marginLeft","Loading","Spinner","type","ModelsList","loading","model_data","labels","desciption","QRModal","stylestwo","textAlign","mariginTop","padding","DeployForm","model_name","description","diseases","toAddress","error_data","after_train","onChange","e","target","temp","push","onCheckboxBtnClick","selected","array","indexOf","splice","onSubmit","event","preventDefault","data_for_training","toEmail","url","axios","post","res","Form","FormGroup","Label","for","Input","id","required","ButtonToolbar","ButtonGroup","active","includes","Alert","ConfigForm","Folder_Name","fileType","success_data","data_for_config","console","log","typ","message","ClusterForm","link","width","height","display","position","frameBorder","Inference","selectedFile","prediction","error","model","onChangeHandler","fileChangedHandler","files","uploadHandler","formData","FormData","append","buttonStyle","float","margin","HelpLink","icon","faQuestionCircle","size","spin","Example","activeTab","setActiveTab","tab","tabs","classnames","TabContent","TabPane","tabId","FileSystem","App","Tabs","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3555cf0a.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport {\n  Collapse,\n  Navbar,\n  NavbarToggler,\n  NavbarBrand,\n  Nav,\n  NavItem,\n  NavLink\n} from \"reactstrap\";\n\nconst NavBar = props => {\n  const [collapsed, setCollapsed] = useState(true);\n\n  const toggleNavbar = () => setCollapsed(!collapsed);\n\n  return (\n    <div>\n      <Navbar color=\"dark\" dark>\n        <NavbarBrand href=\"/\" className=\"mr-auto\">\n          D.S.F.H\n        </NavbarBrand>\n        <NavbarToggler onClick={toggleNavbar} className=\"mr-2\" />\n        <Collapse isOpen={!collapsed} navbar>\n          <Nav navbar>\n            <NavItem>\n              <NavLink href=\"\">GitHub</NavLink>\n            </NavItem>\n          </Nav>\n        </Collapse>\n      </Navbar>\n    </div>\n  );\n};\n\nexport default NavBar;\n","import firebase from \"firebase/app\";\nimport \"firebase/auth\"; // for authentication\nimport \"firebase/storage\"; // for storage\nimport \"firebase/database\"; // for realtime database\nimport \"firebase/firestore\"; // for cloud firestore\nimport \"firebase/messaging\"; // for cloud messaging\nimport \"firebase/functions\";\n\nconst firebaseApp = firebase.initializeApp({\n  // copy and paste your firebase credential here\n  apiKey: \"AIzaSyDxE7tOSORmr7EWRAAx2E61938KsTVouM4\",\n  authDomain: \"dsfh-6ead5.firebaseapp.com\",\n  databaseURL: \"https://dsfh-6ead5.firebaseio.com\",\n  projectId: \"dsfh-6ead5\",\n  storageBucket: \"dsfh-6ead5.appspot.com\",\n  messagingSenderId: \"1049064576276\",\n  appId: \"1:1049064576276:web:a9688582b582e59bda9e01\",\n  measurementId: \"G-8G0DT9ESQT\"\n});\n\nconst db = firebaseApp.firestore();\n\nexport { db };\n","import React, { Component } from \"react\";\nimport { VictoryChart, VictoryBar, VictoryTheme, VictoryLabel } from \"victory\";\n\nexport default class BarGraph extends Component {\n  render() {\n    return (\n      <VictoryChart domainPadding={50} theme={VictoryTheme.material}>\n        <VictoryBar\n          alignment=\"start\"\n          labelComponent={<VictoryLabel textAnchor=\"start\" angle=\"-45\" />}\n          data={this.props.data}\n          x=\"index\"\n          y=\"names\"\n        />\n      </VictoryChart>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { db } from \"../fire\";\nimport { Table, Container, Row, Col, Button } from \"reactstrap\";\nimport BarGraph from \"./BarGraph\";\n\nconst styles = {\n  marginTop: \"80px\"\n};\n\nclass MyFileSystem extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { data: [] }; // <- set up react state\n  }\n  fetchFromDB = () => {\n    db.collection(\"Images\")\n      .get()\n      .then(querySnapshot => {\n        const data = querySnapshot.docs.map(doc => doc.data());\n        // console.log(data);\n        for (var i = 0; i < data.length; i++) {\n          data[i].names = data[i].names.length;\n          data[i].index = i;\n        }\n\n        this.setState({ data: data }); // array of cities objects\n      });\n  };\n  componentDidMount() {\n    this.fetchFromDB();\n  }\n\n  render() {\n    return (\n      <Container>\n        <Row>\n          <Col xs=\"4\" style={styles}>\n            <h5>\n              <strong>Diseases collected so far:</strong>\n            </h5>\n            <Table striped>\n              <thead>\n                <tr>\n                  <th>#</th>\n                  <th>Disease name</th>\n                  <th>Number of images</th>\n                </tr>\n              </thead>\n              <tbody>\n                {this.state.data.map((folder, index) => (\n                  <tr key={index}>\n                    <th scope=\"row\">{index}</th>\n                    <td>{folder.label}</td>\n                    <td>{folder.names}</td>\n                  </tr>\n                ))}\n              </tbody>\n            </Table>\n            <Button color=\"primary\" onClick={this.fetchFromDB}>\n              Reload\n            </Button>\n          </Col>\n          <Col xs=\"8\">\n            <BarGraph data={this.state.data} />\n          </Col>\n        </Row>\n      </Container>\n    );\n  }\n}\n\nexport default MyFileSystem;\n","import React, { Component } from \"react\";\nimport QRCode from \"qrcode-react\";\n\nexport default class QRcode extends Component {\n  render() {\n    return (\n      <div>\n        <QRCode\n          value={\n            \"https://api-2445582824322.production.gw.apicast.io:443/deploy/\" +\n            this.props.name +\n            \"/\"\n          }\n        />\n        ,\n      </div>\n    );\n  }\n}\n","import React, { useState } from \"react\";\nimport { Button, Modal, ModalHeader, ModalBody } from \"reactstrap\";\nimport QRCode from \"./QRcode\";\nconst ModalExample = props => {\n  const { name, className } = props;\n\n  const [modal, setModal] = useState(false);\n\n  const styles = {\n    marginLeft: \"167px\"\n  };\n  const toggle = () => setModal(!modal);\n\n  return (\n    <div>\n      <Button color=\"success\" onClick={toggle}>\n        Deploy\n      </Button>\n      <Modal isOpen={modal} toggle={toggle} className={className}>\n        <ModalHeader toggle={toggle}>Scan this with the App!</ModalHeader>\n        <ModalBody>\n          <div style={styles}>\n            <QRCode name={name} />\n          </div>\n        </ModalBody>\n      </Modal>\n    </div>\n  );\n};\n\nexport default ModalExample;\n","import React from \"react\";\nimport { Spinner } from \"reactstrap\";\n\nconst Loading = props => {\n  return (\n    <div>\n      <Spinner type=\"grow\" color=\"success\" />\n      <Spinner type=\"grow\" color=\"danger\" />\n      <Spinner type=\"grow\" color=\"warning\" />\n    </div>\n  );\n};\n\nexport default Loading;\n","import React, { Component } from \"react\";\nimport { db } from \"../fire\";\nimport { Container, Table, Button } from \"reactstrap\";\nimport QRModal from \"./QRModal\";\nimport Loading from \"./Loading\";\nconst styles = {\n  marginTop: \"80px\"\n};\n\nexport default class ModelsList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { model_data: [], loading: false }; // <- set up react state\n  }\n  fetchFromDB = () => {\n    this.setState({ loading: true });\n    db.collection(\"Models\")\n      .get()\n      .then(querySnapshot => {\n        const data = querySnapshot.docs.map(doc => doc.data());\n        //console.log(data);\n        this.setState({ model_data: data }); // array of cities objects\n      });\n    this.setState({ loading: false });\n  };\n  componentDidMount() {\n    this.fetchFromDB();\n  }\n\n  render() {\n    return (\n      <Container style={styles}>\n        <h5>\n          <strong>Models trained:</strong>\n        </h5>\n        <Table striped>\n          <thead>\n            <tr>\n              <th>#</th>\n              <th>Model name</th>\n              <th>Diseases involved</th>\n              <th>Description</th>\n              <th>QR-code</th>\n            </tr>\n          </thead>\n          <tbody>\n            {/* Render the list of messages */\n            this.state.model_data.map((data, index) => (\n              <tr key={index}>\n                <th scope=\"row\">{index}</th>\n                <td>{data.name}</td>\n                <td>\n                  <ul>\n                    {data.labels.map((label, key) => (\n                      <li key={key}>{label}</li>\n                    ))}\n                  </ul>\n                </td>\n                <td>{data.desciption}</td>\n                <td>\n                  <QRModal name={data.name} />\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </Table>\n        {!this.state.loading && (\n          <Button color=\"primary\" onClick={this.fetchFromDB}>\n            Reload\n          </Button>\n        )}\n        {this.state.loading && <Loading />}\n      </Container>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport {\n  Button,\n  Form,\n  FormGroup,\n  Label,\n  Input,\n  ButtonGroup,\n  ButtonToolbar,\n  Alert\n} from \"reactstrap\";\nimport { db } from \"../fire\";\nimport Loading from \"./Loading\";\nimport axios from \"axios\";\n\nconst styles = {\n  marginTop: \"80px\"\n};\nconst stylestwo = {\n  textAlign: \"center\",\n\n  mariginTop: \"10px\",\n  padding: \"20px\"\n};\n\nclass DeployForm extends Component {\n  state = {\n    model_name: \"\",\n    description: \"\",\n    diseases: [],\n    labels: [],\n    toAddress: \"\",\n    loading: false,\n    error_data: \"\",\n    after_train: false\n  };\n\n  onChange = e => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n  fetchFromDB = () => {\n    this.setState({ loading: true });\n    db.collection(\"Images\")\n      .get()\n      .then(querySnapshot => {\n        const data = querySnapshot.docs.map(doc => doc.data());\n        //console.log(data);\n        var temp = [];\n        for (var i = 0; i < data.length; i++) {\n          temp.push(data[i].label);\n        }\n        //console.log(temp);\n        this.setState({ labels: temp }); // array of cities objects\n      });\n    this.setState({ loading: false });\n  };\n  componentDidMount() {\n    this.fetchFromDB();\n  }\n  onCheckboxBtnClick = selected => {\n    var array = [...this.state.diseases]; // make a separate copy of the array\n    var index = array.indexOf(selected);\n    if (index < 0) {\n      array.push(selected);\n    } else {\n      array.splice(index, 1);\n    }\n\n    this.setState({ diseases: array });\n  };\n\n  onSubmit = event => {\n    this.setState({ loading: true });\n    event.preventDefault();\n    const { description, model_name, diseases, toAddress } = this.state;\n\n    const data_for_training = {\n      labels: diseases,\n      description: description,\n      toEmail: toAddress\n    };\n\n    const url =\n      \"https://api-2445582824322.production.gw.apicast.io:443/train/\" +\n      model_name +\n      \"?user_key=402d46c6d21b86e66339d12e79e05366\";\n    //console.log(data_for_training);\n    axios.post(url, { data_for_training }).then(res => {\n      if (res.data === \"Success\") {\n        this.setState({ loading: false, after_train: true });\n      } else {\n        this.setState({\n          loading: false,\n          error_data: \"The training failed, try again!!\"\n        });\n      }\n      //console.log(res.data);\n    });\n\n    this.setState({\n      model_name: \"\",\n      description: \"\",\n      diseases: []\n    });\n  };\n\n  render() {\n    return (\n      <div>\n        <Form onSubmit={this.onSubmit} style={styles}>\n          <h5>\n            <strong>Make a new model:</strong>\n          </h5>\n          <FormGroup>\n            <Label for=\"Model-Name\">Model Name:</Label>\n            <Input\n              type=\"text\"\n              name=\"model_name\"\n              id=\"model_name\"\n              value={this.state.model_name}\n              onChange={this.onChange}\n              required\n            />\n          </FormGroup>\n          <FormGroup>\n            <Label for=\"description\">Description:</Label>\n            <Input\n              type=\"text\"\n              name=\"description\"\n              id=\"description\"\n              value={this.state.description}\n              onChange={this.onChange}\n              required\n            />\n          </FormGroup>\n          <FormGroup>\n            <Label for=\"toAddress\">Email:</Label>\n            <Input\n              type=\"email\"\n              name=\"toAddress\"\n              id=\"toAddress\"\n              value={this.state.toAddress}\n              onChange={this.onChange}\n              required\n            />\n          </FormGroup>\n          <p>Select Diseases:</p>\n          <ButtonToolbar>\n            <ButtonGroup>\n              {this.state.labels.map((label, index) => (\n                <Button\n                  color=\"success\"\n                  onClick={() => this.onCheckboxBtnClick(label)}\n                  active={this.state.diseases.includes(label)}\n                  key={index}\n                >\n                  {label}\n                </Button>\n              ))}\n            </ButtonGroup>\n            <ButtonGroup>\n              <Button onClick={this.fetchFromDB}>\n                <i className=\"fa fa-refresh\"></i>\n              </Button>\n            </ButtonGroup>\n          </ButtonToolbar>\n          <br />\n          {!this.state.loading && <Button color=\"primary\">Train</Button>}\n          {this.state.loading && <Loading />}\n          <br />\n          {this.state.error_data && (\n            <div style={stylestwo}>\n              <p>\n                <Alert color=\"danger\">{this.state.error_data}</Alert>\n              </p>\n            </div>\n          )}\n          {this.state.after_train && (\n            <div style={stylestwo}>\n              <Alert color=\"success\">\n                An email will be sent to you after the training has completed.\n              </Alert>\n            </div>\n          )}\n        </Form>\n      </div>\n    );\n  }\n}\n\nexport default DeployForm;\n","import React, { Component } from \"react\";\nimport { Form, FormGroup, Input, Label, Alert, Button } from \"reactstrap\";\nimport axios from \"axios\";\n\nconst styles = {\n  marginTop: \"80px\"\n};\nconst stylestwo = {\n  textAlign: \"center\",\n\n  mariginTop: \"10px\",\n  padding: \"20px\"\n};\nclass ConfigForm extends Component {\n  state = {\n    Folder_Name: \"\",\n    fileType: \"Image\",\n    error_data: \"\",\n    success_data: \"\"\n  };\n  onChange = e => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n  onSubmit = event => {\n    event.preventDefault();\n    const { Folder_Name, fileType } = this.state;\n    const data_for_config = {\n      Folder_Name: Folder_Name,\n      fileType: fileType\n    };\n    const url = \"http://35.223.18.41:5000/config\";\n    axios.post(url, { data_for_config }).then(res => {\n      console.log(res.data);\n      if (res.data.typ === \"error\") {\n        this.setState({ error_data: res.data.message });\n      }\n      if (res.data.typ === \"success\") {\n        this.setState({ success_data: res.data.message });\n      }\n    });\n    console.log(this.state);\n  };\n\n  render() {\n    return (\n      <div>\n        <Form onSubmit={this.onSubmit} style={styles}>\n          <h5>\n            <strong>Configure Newly uploaded folder:</strong>\n          </h5>\n          <FormGroup>\n            <Label for=\"Folder_Name\">Folder-Name:</Label>\n            <Input\n              type=\"text\"\n              name=\"Folder_Name\"\n              id=\"Folder_Name\"\n              value={this.state.Folder_Name}\n              onChange={this.onChange}\n              required\n            />\n          </FormGroup>\n          <FormGroup>\n            <Label for=\"fileType\">File-type:</Label>\n            <Input\n              type=\"select\"\n              name=\"fileType\"\n              id=\"fileType\"\n              onChange={this.onChange}\n              value={this.state.fileType}\n            >\n              <option>Image</option>\n              <option>Dicom</option>\n            </Input>\n          </FormGroup>\n\n          <br />\n          <Button color=\"primary\">configure</Button>\n\n          <br />\n          {this.state.error_data && (\n            <div style={stylestwo}>\n              <p>\n                <Alert color=\"danger\">{this.state.error_data}</Alert>\n              </p>\n            </div>\n          )}\n          {this.state.success_data && (\n            <div style={stylestwo}>\n              <p>\n                <Alert color=\"success\">{this.state.success_data}</Alert>\n              </p>\n            </div>\n          )}\n        </Form>\n      </div>\n    );\n  }\n}\n\nexport default ConfigForm;\n","import React, { Component } from \"react\";\nimport { Form, FormGroup, Input, Label, Button } from \"reactstrap\";\nimport Iframe from \"react-iframe\";\n\nconst styles = {\n  marginTop: \"80px\"\n};\n\nclass ClusterForm extends Component {\n  state = {\n    Folder_Name: \"\",\n    fileType: \"Images\",\n    link: \"\"\n  };\n  onChange = e => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n  onSubmit = event => {\n    event.preventDefault();\n    const { Folder_Name } = this.state;\n    const url = \"http://35.232.144.179:5000/image-cluster/\" + Folder_Name;\n    this.setState({ link: url });\n  };\n\n  render() {\n    return (\n      <div>\n        <Form onSubmit={this.onSubmit} style={styles}>\n          <h5>\n            <strong>Type a folder to run clustering on:</strong>\n          </h5>\n          <FormGroup>\n            <Label for=\"Folder_Name\">Folder-Name:</Label>\n            <Input\n              type=\"text\"\n              name=\"Folder_Name\"\n              id=\"Folder_Name\"\n              value={this.state.Folder_Name}\n              onChange={this.onChange}\n              required\n            />\n          </FormGroup>\n\n          <br />\n          <Button color=\"primary\">Clusterify</Button>\n\n          <br />\n          {this.state.link && (\n            <Iframe\n              url={this.state.link}\n              width=\"900px\"\n              height=\"700px\"\n              display=\"initial\"\n              position=\"relative\"\n              frameBorder=\"0\"\n            />\n          )}\n        </Form>\n      </div>\n    );\n  }\n}\n\nexport default ClusterForm;\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { Button, Input, Alert, Label } from \"reactstrap\";\n\nimport { db } from \"../fire\";\nimport Loading from \"./Loading\";\n\nconst stylestwo = {\n  textAlign: \"center\",\n\n  mariginTop: \"10px\",\n  padding: \"20px\"\n};\n\nexport default class Inference extends Component {\n  state = {\n    selectedFile: null,\n    prediction: \"\",\n    error: \"\",\n    model_data: [],\n    model: \"--select--\",\n    loading: false\n  };\n\n  componentDidMount() {\n    db.collection(\"Models\")\n      .get()\n      .then(querySnapshot => {\n        const data = querySnapshot.docs.map(doc => doc.data());\n        this.setState({ model_data: data });\n      });\n  }\n  onChangeHandler = event => {\n    this.setState({ model: event.target.value });\n  };\n  fileChangedHandler = event => {\n    this.setState({ selectedFile: event.target.files[0] });\n  };\n  uploadHandler = () => {\n    this.setState({ loading: true, error: \"\" });\n    if (this.state.model === \"--select--\") {\n      this.setState({\n        error: \"Please select a model\",\n        loading: false,\n        prediction: \"\"\n      });\n    } else {\n      const url =\n        \"https://api-2445582824322.staging.gw.apicast.io/deploy/\" +\n        this.state.model +\n        \"/a/?user_key=402d46c6d21b86e66339d12e79e05366\";\n      const formData = new FormData();\n      formData.append(\n        \"file\",\n        this.state.selectedFile,\n        this.state.selectedFile.name\n      );\n      axios.post(url, formData).then(res => {\n        if (res.data.prediction) {\n          this.setState({ prediction: res.data.prediction, loading: false });\n        } else {\n          this.setState({\n            error: \"Inference did not work! Check again later\",\n            loading: false\n          });\n        }\n      });\n    }\n  };\n\n  render() {\n    return (\n      <div>\n        <Label for=\"selectModels\">\n          <strong>Select Model:</strong>\n        </Label>\n        <Input\n          type=\"select\"\n          name=\"select\"\n          id=\"selectModels\"\n          value={this.state.model}\n          onChange={this.onChangeHandler}\n        >\n          <option>--select--</option>\n          {this.state.model_data.map((data, index) => (\n            <option key={index}>{data.name}</option>\n          ))}\n        </Input>\n        <br />\n        <Input type=\"file\" onChange={this.fileChangedHandler} />\n        <br />\n        {!this.state.loading && (\n          <Button color=\"primary\" onClick={this.uploadHandler}>\n            Run Test\n          </Button>\n        )}\n        <br />\n        {this.state.loading && <Loading />}\n\n        {this.state.error && (\n          <div style={stylestwo}>\n            <Alert color=\"danger\">{this.state.error}</Alert>\n          </div>\n        )}\n        {this.state.prediction && (\n          <div style={stylestwo}>\n            <Alert color=\"success\">\n              The disease is {this.state.prediction}.\n            </Alert>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faQuestionCircle } from \"@fortawesome/free-solid-svg-icons\";\nimport { NavLink } from \"reactstrap\";\nconst buttonStyle = {\n  float: \"right\",\n  margin: \"10px\"\n};\nexport default class HelpLink extends Component {\n  render() {\n    return (\n      <div style={buttonStyle}>\n        <NavLink href=\"https://st2-ev.github.io\" target=\"_blank\">\n          <FontAwesomeIcon icon={faQuestionCircle} size=\"3x\" spin />\n        </NavLink>\n      </div>\n    );\n  }\n}\n","import React, { useState } from \"react\";\nimport {\n  TabContent,\n  TabPane,\n  Nav,\n  NavItem,\n  NavLink,\n  Row,\n  Col,\n  Container\n} from \"reactstrap\";\nimport classnames from \"classnames\";\nimport FileSystem from \"./FileSystem\";\nimport ModelsList from \"./ModelsList\";\nimport DeployForm from \"./DeployForm\";\nimport Iframe from \"react-iframe\";\nimport ConfigForm from \"./ConfigForm\";\nimport ClusterForm from \"./ClusterForm\";\nimport Inference from \"./Inference\";\nimport HelpLink from \"./HelpLink\";\n\nconst styles = {\n  padding: \"30px\"\n};\n\nconst Example = props => {\n  const [activeTab, setActiveTab] = useState(\"1\");\n\n  const toggle = tab => {\n    if (activeTab !== tab) setActiveTab(tab);\n  };\n  return (\n    <div>\n      <Nav tabs>\n        <NavItem>\n          <NavLink\n            className={classnames({ active: activeTab === \"1\" })}\n            onClick={() => {\n              toggle(\"1\");\n            }}\n          >\n            Home\n          </NavLink>\n        </NavItem>\n        <NavItem>\n          <NavLink\n            className={classnames({ active: activeTab === \"2\" })}\n            onClick={() => {\n              toggle(\"2\");\n            }}\n          >\n            Deploy\n          </NavLink>\n        </NavItem>\n        <NavItem>\n          <NavLink\n            className={classnames({ active: activeTab === \"3\" })}\n            onClick={() => {\n              toggle(\"3\");\n            }}\n          >\n            Test\n          </NavLink>\n        </NavItem>\n        <NavItem>\n          <NavLink\n            className={classnames({ active: activeTab === \"4\" })}\n            onClick={() => {\n              toggle(\"4\");\n            }}\n          >\n            Files\n          </NavLink>\n        </NavItem>\n\n        <NavItem>\n          <NavLink\n            className={classnames({ active: activeTab === \"5\" })}\n            onClick={() => {\n              toggle(\"5\");\n            }}\n          >\n            Clustering\n          </NavLink>\n        </NavItem>\n      </Nav>\n      <TabContent activeTab={activeTab}>\n        <TabPane tabId=\"1\">\n          <HelpLink />\n          <Container>\n            <FileSystem />\n          </Container>\n        </TabPane>\n        <TabPane tabId=\"2\">\n          <HelpLink />\n          <Container>\n            <Row>\n              <Col xs=\"6\">\n                <ModelsList />\n              </Col>\n              <Col xs=\"6\">\n                <DeployForm />\n              </Col>\n            </Row>\n          </Container>\n        </TabPane>\n        <TabPane tabId=\"3\">\n          <HelpLink />\n          <Container style={styles}>\n            <Inference />\n          </Container>\n        </TabPane>\n        <TabPane tabId=\"4\">\n          <HelpLink />\n          <Container style={styles}>\n            <Row>\n              <Col xs=\"6\">\n                <Iframe\n                  url=\"http://35.223.18.41:8000/\"\n                  width=\"500px\"\n                  height=\"500px\"\n                  id=\"myId\"\n                  className=\"myClassname\"\n                  display=\"initial\"\n                  position=\"relative\"\n                  frameBorder=\"0\"\n                />\n              </Col>\n              <Col xs=\"6\">\n                <ConfigForm />\n              </Col>\n            </Row>\n          </Container>\n        </TabPane>\n\n        <TabPane tabId=\"5\">\n          <HelpLink />\n          <Container style={styles}>\n            <Row>\n              <Col xs=\"6\">\n                <Iframe\n                  url=\"http://35.232.144.179:8000/\"\n                  width=\"500px\"\n                  height=\"500px\"\n                  id=\"my\"\n                  className=\"myClass\"\n                  display=\"initial\"\n                  position=\"relative\"\n                  frameBorder=\"0\"\n                />\n              </Col>\n              <Col xs=\"6\">\n                <ClusterForm />\n              </Col>\n            </Row>\n          </Container>\n        </TabPane>\n      </TabContent>\n    </div>\n  );\n};\n\nexport default Example;\n","import React from \"react\";\nimport \"./App.css\";\nimport NavBar from \"./components/NavBar\";\nimport Tabs from \"./components/Tabs\";\nfunction App() {\n  return (\n    <div>\n      <NavBar />\n      <Tabs />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}